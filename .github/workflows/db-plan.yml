name: DB Plan (Prisma)
on:
  pull_request:
    paths: [ "schema.prisma", "migrations/**" ]

env:
  PRISMA_VERSION: ${{ vars.PRISMA_VERSION || '6.15.0' }}

concurrency:
  group: db-plan-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Fetch main
        run: git fetch origin main

      - name: Extract main schema
        run: |
          mkdir -p /tmp/prisma-plan
          git show origin/main:schema.prisma > /tmp/prisma-plan/schema.main.prisma

      - name: Generate SQL diff (main -> PR)
        run: |
          npx --yes prisma@${PRISMA_VERSION} migrate diff \
            --from-schema-datamodel=/tmp/prisma-plan/schema.main.prisma \
            --to-schema-datamodel=./schema.prisma \
            --script > /tmp/prisma-plan/plan.sql
          npx --yes prisma@${PRISMA_VERSION} migrate diff \
            --from-schema-datamodel=/tmp/prisma-plan/schema.main.prisma \
            --to-schema-datamodel=./schema.prisma \
            > /tmp/prisma-plan/plan.txt

      - uses: actions/upload-artifact@v4
        with:
          name: prisma-plan
          path: |
            /tmp/prisma-plan/plan.sql
            /tmp/prisma-plan/plan.txt

      - name: Build PR comment body
        run: |
          ts="$(date -u +"%Y-%m-%d %H:%M:%SZ")"
          sha="$(git rev-parse --short HEAD)"
          {
            echo "**Prisma DB Plan (main → PR) — ${sha}**"
            echo "_Generated ${ts} • [Workflow run](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})_"
            echo
            echo '```sql'
            head -n 120 /tmp/prisma-plan/plan.sql || true
            echo
            echo '```'
            echo
            echo "_Full plan attached as artifact: **prisma-plan → plan.sql**_"
          } > /tmp/comment.md

      - name: Post PR comment (new each run)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const pr = context.payload.pull_request?.number;
            if (!pr) { core.setFailed('Not a pull_request event'); return; }
            const body = fs.readFileSync('/tmp/comment.md', 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body
            });
